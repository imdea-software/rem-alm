"""
Django settings for graphs project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
from decouple import config
from pathlib import Path
import os
import mimetypes

mimetypes.add_type("text/javascript", ".js", True)



ZBX_USER = config('ZBX_USER')
ZBX_PWD = config('ZBX_PWD')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# LOGGING : set up location for all the logging messages
LOG_FILE_LOCATION = '/var/log/remalm/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },

    'handlers': {
        'errors_file': {
            'level':'ERROR',
            'class': 'logging.FileHandler',
            'filename': '/var/log/remalm/remalm_error.log',
            'formatter': 'verbose',
        },
        'warning_file': {
            'level':'WARNING',
            'class': 'logging.FileHandler',
            'filename': '/var/log/remalm/remalm_warning.log',
            'formatter': 'verbose',
        },
        'info_file': {
            'level':'WARNING',
            'class': 'logging.FileHandler',
            'filename': '/var/log/remalm/remalm_info.log',
            'formatter': 'simple',
        },
        
    }, 
     'loggers': {
        'error_loger': {
            'handlers': ['errors_file'],
            'level': 'ERROR',
            'propagate': True,
        },
        'warning_logger':{
            'handlers':['warning_file'],
            'level':'WARNING',
            'propagate':True,
        },
        'info_logger':{
            'handlers':['info_file'],
            'level':'INFO',
            'propagate':True,
        },
        'django.request':{
            'handlers':['errors_file'],
            'level':'ERROR',
            'propagate':True,
        }
    }
}


ALLOWED_HOSTS = ['localhost','rem-alm.redimadrid.es','127.0.0.1','10.10.4.172']

CSRF_TRUSTED_ORIGINS = ['https://rem-alm.redimadrid.es','https://*.127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'accounts'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "django.middleware.security.SecurityMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

USE_TZ = True
TIME_ZONE = 'Europe/Madrid'

ROOT_URLCONF = 'graphs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'graphs.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# using default db because of the small size of the project, 
# might be useful to change it if the project grows
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'django_python3_ldap.auth.LDAPBackend',
)

LOGOUT_REDIRECT_URL ='dashboard'
LOGIN_REDIRECT_URL = 'dashboard'
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder'
]

STATICFILES_DIRS = (
  os.path.join(BASE_DIR, 'static'),
)
STATIC_URL = 'static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

""" LDAP SERVER CONFIG SO INTRANET USERS CAN ACCESS THE APP """

# The URL of the LDAP server(s).  List multiple servers for high availability ServerPool connection.
LDAP_AUTH_URL = [config('LDAP_AUTH_URL')]

# Specify which TLS version to use (Python 3.10 requires TLSv1 or higher)
import ssl
LDAP_AUTH_TLS_VERSION = ssl.PROTOCOL_TLSv1_2


AUTH_LDAP_SERVER_URI = config('LDAP_SERVER_URI') 
LDAP_AUTH_SEARCH_BASE = config('LDAP_SEARCH_BASE') 

LDAP_ALWAYS_SEARCH_BIND = True

AUTH_LDAP_START_TLS = True


# SETTINGS FOR DEPLOYMENT

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_PRELOAD = True
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
